body{
    font-family: 'Montserrat', sans-serif;
}

header{
    background: #BBBBBB;
    padding: 20px 0;
}

.caixa{
    position: relative;
    width: 940px;
    margin: 0 auto;
}

nav{
    position: absolute;
    top: 110px;
    right: 0;

}

nav li{
    display: inline;
    margin: 0 0 0 15px;
}

nav a{
    text-transform: uppercase;
    color: #000000;
    font-weight: bold;
    font-size: 22px;
    text-decoration: none;
}

nav a:hover{
    color: #C78C19;
    text-decoration: underline;
}

.produtos{
    width: 940px;
    margin: 0 auto;
    padding: 50px 0;
}

.produtos li{
    display: inline-block;
    text-align: center;
    width: 30%;
    vertical-align: top;
    margin: 0 1.5%;
    padding: 30px 20px;
    box-sizing: border-box;
    border: 2px solid #000000;
    border-radius: 10px;
}

.produtos li:hover {
    border-color: #C78C19;
}

.produtos li:active{
    border-color: #088C19;
}

.produtos li:hover h2{
    font-size: 34px;
}

.produtos h2{
    font-size: 30px;
    font-weight: bold;
}

.produto-descricao{
    font-size: 18px;
}

.produto-preco{
    font-size: 22px;
    font-weight: bold;
    margin-top: 10px;
}

footer{
    text-align: center;
    background: url(imagens/bg.jpg);
    padding: 40px 0;
}

.copyright{
    color: #FFFFFF;
    font-size: 13px;
    margin-top: 20px;
}

/* O main tendo width de 940px se torna um elemendo fundamental para a padronização de todo o conteúdo do nosso site */
main{
    width: 940px;
    margin: 0 auto;
}

form{
    margin: 40px 0;
}

/* No CSS, quando criamos uma configuração específica para um elemento, e queremos replicar essa mesma configuração para outro elemento, utilizamos a vírgula como nos exemplos abaixo */
form label, form legend{
    display: block;
    font-size: 20px;
    margin-bottom: 10px;
}

/* Adicionei uma classe apenas para os inputs padrões, dessa forma os inputs "radio" não são alterados e permanecem no display inline */
.input-padrao{
    display: block;
    margin-bottom: 20px;
    padding: 10px 25px;
    width: 50%;
}

.checkbox{
    margin: 20px 0;
}

/* Nesse campo, configuramos o botão "Enviar" do formulário. Onde mexemos no seu tamanho, cor, transição etc */
.enviar{
    width: 40%;
    padding: 15px 0;
    background: orange;
    color: white;
    font-weight: bold;
    font-size: 18px;
    border: none;
    border-radius: 5px;
    transition: 1s;
    cursor: pointer;
}

/* Com essa configuração, utilizamos uma pseudo-classe hover. Onde ao passar o mouse por cima do elemento (botão enviar) irá acontecer uma ação, que nesse caso, será a mudança da cor de fundo do elemento.
Outra configuração que fizemos, foi a de "transform" onde conseguimos transformar um elemento. Nesse caso, aumentamos seu tamanho em 20% proporcionalmente todos os seus tamanhos.  */

.enviar:hover{
    background: darkorange;
    transform: scale(1.2);
}

/* Configuramos a tabela */
table{
    margin: 20px 0 40px;
}

thead{
    background: #555555;
    color: white;
    font-weight: bold;
}

td, th{
    border: 1px solid #000000;
    padding: 8px 15px;
}

/* Css da página inicial */
.banner{
    width: 100%;
}

.titulo-principal{
    text-align: center;
    /* em medida proporcional para px - no caso abaixo, quero que o titulo principal tenha o dobro do tamanho em relação ao resto do texto independe do tamanho da fonte (2em = 2x o tamanho da fonte base)*/
    font-size: 2em;
    margin-bottom: 1em;
    /*A propriedade clear especifica se um elemento pode ter elementos flutuantes ao seu lado ou se devem ser movidos para abaixo dele (clear). Essa propriedade se aplica à elementos flutuantes ou não flutuantes. - OU SEJA, USAMOS PARA LIMPAR O EFEITO DA PROPRIEDADE FLOAT*/
    clear: left;
}

.principal p{
    margin-bottom: 1em;
}

.principal strong{
    font-weight: bold;
}

.principal em{
    font-style: italic;
}

.utensilios{
    width: 120px;
    /*Usamos a propriedade float quando queremos que nosso elemento (img) "levante" em relação aos outros, porém, na sua posição inicial permancerá sua "sombra" dessa forma todos os elementos em volta vão se comportar como se a img ainda estivesse na posição inicial*/
    float: left;
    margin: 0 20px 20px 0;
}

/* Lembrando que a utilização da medida "em" abaixo é para criar um espaçamento interno proporcional ao tamanho da fonte do meu site */
.mapa{
    padding: 3em 0;
}

.mapa p {
    margin-bottom: 2em;
    text-align: center;
}


.beneficios{
    padding: 3em 0;
}

/* Adicionamos a div para englobar todo o conteúdo, e damos um width de 640px, dessa forma, a lista ocupará 40% da div e a img 60% */
.conteudo-beneficios{
    width: 640px;
    margin: 0 auto;
}

/* A ul é inline, porém, os li são block, e por isso, sem a propriedade "inline-block" não conseguimos colocar um elemento do lado do outro */
.lista-beneficios{
    width: 40%;
    display: inline-block;
    vertical-align: top;
}
/* line-height é para alterar o espaçamento entre as linhas da lista */
.itens{
    line-height: 1.5;
}

.itens:first-child{
    font-weight: bold;
}

.imagem-beneficios{
    width: 60%;
}

/* Com essas configurações abaixo, deixamos a caixa "video" do mesmo tamanho do video original, porem adicionamos uma margem para cima e para baixo de "1em" (proporcional ao tamanho da fonte base do site) e "auto" nas laterais, onde irá centralizar o vídeo */
.video{
    width: 560px;
    margin: 2em auto;
}